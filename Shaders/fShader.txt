#version 430 core
out vec4 fColor;

struct Sphere{
vec3 pos;
vec4 Color;
float radius;
};

struct LightSrc{
vec3 pos;
vec3 direction;
vec4 color;
float strength;
};

//calculates distance
float dist(vec3 obj1, vec3 obj2){
return sqrt(pow((obj2.x-obj1.x),2)+pow((obj2.y-obj1.y),2)+pow((obj2.z-obj1.z),2));
}

in vec3 vertexPos;

void main(){
Sphere sphere;
LightSrc light;


sphere.pos = vec3(0.0,0.0,0.0);
sphere.radius = 0.5f;
sphere.Color = vec4(1.0,0.0,0.0,1.0);

light.pos = vec3(-1.0,0.0,0.0);

if (dist(vertexPos, sphere.pos) < sphere.radius){
  fColor = sphere.Color;
}else{
  fColor = vec4(vertexPos.x, vertexPos.y,0.0,1.0);
  }
}
